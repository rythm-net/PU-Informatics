/*
INTERSECT -ANY, IN, EXISTS
EXCEPT - <> ALL, NOT IN, EXISTS
*/

/*Изведете малките имена в базата, които принадлежат и на служител и на клиент*/
SELECT FNAME 
FROM EMPLOYEES
INTERSECT 
SELECT FNAME 
FROM CUSTOMERS

SELECT FNAME 
FROM CUSTOMERS
INTERSECT 
SELECT FNAME 
FROM EMPLOYEES

SELECT DISTINCT FNAME 
FROM EMPLOYEES
WHERE FNAME  = ANY (SELECT FNAME	
					FROM CUSTOMERS)

SELECT DISTINCT FNAME 
FROM EMPLOYEES
WHERE FNAME IN (SELECT FNAME	
				FROM CUSTOMERS)

SELECT DISTINCT FNAME
FROM EMPLOYEES E 
WHERE EXISTS (SELECT *
				FROM CUSTOMERS C 
				WHERE C.FNAME  = E.FNAME )

/*Изведете малките имена в базата, които принадлежат на служители и не принадлежат на клиенти*/
SELECT FNAME 
FROM EMPLOYEES
EXCEPT
SELECT FNAME 
FROM CUSTOMERS

--REVERSE 
SELECT FNAME 
FROM CUSTOMERS
EXCEPT
SELECT FNAME 
FROM EMPLOYEES

SELECT DISTINCT FNAME 
FROM EMPLOYEES
WHERE FNAME <> ALL (SELECT FNAME FROM CUSTOMERS)

SELECT DISTINCT FNAME 
FROM EMPLOYEES
WHERE FNAME NOT IN (SELECT FNAME FROM CUSTOMERS)

SELECT DISTINCT FNAME 
FROM EMPLOYEES E
WHERE NOT EXISTS (SELECT * 
					FROM CUSTOMERS C 
					WHERE C.FNAME = E.FNAME)
/*Изведете имената на държавите, в които има клиенти и отделите на фирмата*/
SELECT NAME 
FROM COUNTRIES C JOIN CUSTOMERS CU 
ON C.COUNTRY_ID = CU.COUNTRY_ID
INTERSECT 
SELECT C.NAME 
FROM COUNTRIES C JOIN DEPARTMENTS D 
ON C.COUNTRY_ID = D.COUNTRY_ID

/*Изведете имената на държавите, в които има клиенти и няма отдели на фирмата*/
SELECT NAME 
FROM COUNTRIES C JOIN CUSTOMERS CU 
ON C.COUNTRY_ID = CU.COUNTRY_ID
EXCEPT 
SELECT C.NAME 
FROM COUNTRIES C JOIN DEPARTMENTS D 
ON C.COUNTRY_ID = D.COUNTRY_ID


/*Изведете имената на служителите, които са назначени последни във фирмата*/ 
SELECT TOP 1 WITH TIES FNAME + ' ' + LNAME AS EMPLOYEE, HIRE_DATE
FROM EMPLOYEES 
ORDER BY HIRE_DATE DESC 

/*Изведете номерата, датите и стойността на всички поръчки
направени през 2000 година*/
SELECT O.ORDER_ID, ORDER_DATE, SUM(UNIT_PRICE * QUANTITY) AS TOTAL
FROM ORDERS O  JOIN ORDER_ITEMS OI
ON O.ORDER_ID = OI.ORDER_ID
WHERE YEAR(ORDER_DATE) = 2000
GROUP BY O.ORDER_ID, ORDER_DATE

/*Изведете номерата, датите и стойността на всяка поръчка, като ако всяка поръчка трябва да бъде
платена 7 дни след като е поръчана, изведете и датата, на която трябва да бъде платена.*/
SELECT O.ORDER_ID, ORDER_DATE, SUM(UNIT_PRICE * QUANTITY) AS TOTAL, 
DATEADD(DAY, 7, ORDER_DATE) AS PAID_DATE
FROM ORDERS O JOIN ORDER_ITEMS OI 
ON O.ORDER_ID = OI.ORDER_ID
GROUP BY O.ORDER_ID, ORDER_DATE

/*Изведете имената на служителите и броя поръчки, които са обработвали. Нека в резултата 
участват и служителите, които не са обработвали порчъки до момента.*/
SELECT FNAME + ' ' + LNAME AS EMPLOYEE, COUNT(ORDER_ID) AS TOTAL 
FROM EMPLOYEES E LEFT JOIN ORDERS O 
ON E.EMPLOYEE_ID = O.EMPLOYEE_ID
GROUP BY FNAME  + ' ' +  LNAME 

/*Изведете продуктите, чиито имена започват с S, имат поне три символа дължина  и 
завършват на L*/
SELECT NAME 
FROM PRODUCTS
WHERE NAME LIKE 'S___%L'

/*Изведете имената на клиентите, които са поръчали най-скъпата и най-евтината поръчка
и стойността на съответната поръчка*/
SELECT *
FROM (SELECT TOP 1 FNAME + ' ' + LNAME AS CUSTOMER, O.ORDER_ID, 
SUM(UNIT_PRICE  *QUANTITY) AS TOTAL 
FROM CUSTOMERS C JOIN ORDERS O 
ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN ORDER_ITEMS OI
ON O.ORDER_ID = OI.ORDER_ID
GROUP BY FNAME + ' ' + LNAME, O.ORDER_ID
ORDER BY TOTAL) MIN_ORD
UNION
SELECT * 
FROM (SELECT TOP 1 FNAME + ' ' + LNAME AS CUSTOMER, O.ORDER_ID, 
SUM(UNIT_PRICE  *QUANTITY) AS TOTAL 
FROM CUSTOMERS C JOIN ORDERS O 
ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN ORDER_ITEMS OI
ON O.ORDER_ID = OI.ORDER_ID
GROUP BY FNAME + ' ' + LNAME, O.ORDER_ID
ORDER BY TOTAL DESC ) MAX_ORD