Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term TIMES factor
Rule 5     term -> term DIVIDE factor
Rule 6     term -> term POW factor
Rule 7     term -> factor
Rule 8     factor -> NUMBER
Rule 9     factor -> LPAREN expression RPAREN
Rule 10    factor -> FUNNAME LPAREN expression RPAREN
Rule 11    factor -> FUNNAME LPAREN RPAREN
Rule 12    factor -> FUNNAME LPAREN expression COMMA expression RPAREN
Rule 13    factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

Terminals, with rules where they appear

COMMA                : 12 13 13
DIVIDE               : 5
FUNNAME              : 10 11 12 13
LPAREN               : 9 10 11 12 13
MINUS                : 2
NUMBER               : 8
PLUS                 : 1
POW                  : 6
RPAREN               : 9 10 11 12 13
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 9 10 12 12 13 13 13 0
factor               : 4 5 6 7
term                 : 1 2 3 4 5 6

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 2

    (3) expression -> term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor
    (6) term -> term . POW factor

    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)
    COMMA           reduce using rule 3 (expression -> term .)
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10
    POW             shift and go to state 11


state 3

    (7) term -> factor .

    TIMES           reduce using rule 7 (term -> factor .)
    DIVIDE          reduce using rule 7 (term -> factor .)
    POW             reduce using rule 7 (term -> factor .)
    PLUS            reduce using rule 7 (term -> factor .)
    MINUS           reduce using rule 7 (term -> factor .)
    $end            reduce using rule 7 (term -> factor .)
    RPAREN          reduce using rule 7 (term -> factor .)
    COMMA           reduce using rule 7 (term -> factor .)


state 4

    (8) factor -> NUMBER .

    TIMES           reduce using rule 8 (factor -> NUMBER .)
    DIVIDE          reduce using rule 8 (factor -> NUMBER .)
    POW             reduce using rule 8 (factor -> NUMBER .)
    PLUS            reduce using rule 8 (factor -> NUMBER .)
    MINUS           reduce using rule 8 (factor -> NUMBER .)
    $end            reduce using rule 8 (factor -> NUMBER .)
    RPAREN          reduce using rule 8 (factor -> NUMBER .)
    COMMA           reduce using rule 8 (factor -> NUMBER .)


state 5

    (9) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    expression                     shift and go to state 12
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 6

    (10) factor -> FUNNAME . LPAREN expression RPAREN
    (11) factor -> FUNNAME . LPAREN RPAREN
    (12) factor -> FUNNAME . LPAREN expression COMMA expression RPAREN
    (13) factor -> FUNNAME . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 13


state 7

    (1) expression -> expression PLUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    term                           shift and go to state 14
    factor                         shift and go to state 3

state 8

    (2) expression -> expression MINUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    term                           shift and go to state 15
    factor                         shift and go to state 3

state 9

    (4) term -> term TIMES . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    factor                         shift and go to state 16

state 10

    (5) term -> term DIVIDE . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    factor                         shift and go to state 17

state 11

    (6) term -> term POW . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    factor                         shift and go to state 18

state 12

    (9) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 19
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 13

    (10) factor -> FUNNAME LPAREN . expression RPAREN
    (11) factor -> FUNNAME LPAREN . RPAREN
    (12) factor -> FUNNAME LPAREN . expression COMMA expression RPAREN
    (13) factor -> FUNNAME LPAREN . expression COMMA expression COMMA expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    RPAREN          shift and go to state 21
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    expression                     shift and go to state 20
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 14

    (1) expression -> expression PLUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor
    (6) term -> term . POW factor

    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS term .)
    COMMA           reduce using rule 1 (expression -> expression PLUS term .)
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10
    POW             shift and go to state 11


state 15

    (2) expression -> expression MINUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor
    (6) term -> term . POW factor

    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    COMMA           reduce using rule 2 (expression -> expression MINUS term .)
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10
    POW             shift and go to state 11


state 16

    (4) term -> term TIMES factor .

    TIMES           reduce using rule 4 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 4 (term -> term TIMES factor .)
    POW             reduce using rule 4 (term -> term TIMES factor .)
    PLUS            reduce using rule 4 (term -> term TIMES factor .)
    MINUS           reduce using rule 4 (term -> term TIMES factor .)
    $end            reduce using rule 4 (term -> term TIMES factor .)
    RPAREN          reduce using rule 4 (term -> term TIMES factor .)
    COMMA           reduce using rule 4 (term -> term TIMES factor .)


state 17

    (5) term -> term DIVIDE factor .

    TIMES           reduce using rule 5 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 5 (term -> term DIVIDE factor .)
    POW             reduce using rule 5 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 5 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 5 (term -> term DIVIDE factor .)
    $end            reduce using rule 5 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 5 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 5 (term -> term DIVIDE factor .)


state 18

    (6) term -> term POW factor .

    TIMES           reduce using rule 6 (term -> term POW factor .)
    DIVIDE          reduce using rule 6 (term -> term POW factor .)
    POW             reduce using rule 6 (term -> term POW factor .)
    PLUS            reduce using rule 6 (term -> term POW factor .)
    MINUS           reduce using rule 6 (term -> term POW factor .)
    $end            reduce using rule 6 (term -> term POW factor .)
    RPAREN          reduce using rule 6 (term -> term POW factor .)
    COMMA           reduce using rule 6 (term -> term POW factor .)


state 19

    (9) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    POW             reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 9 (factor -> LPAREN expression RPAREN .)


state 20

    (10) factor -> FUNNAME LPAREN expression . RPAREN
    (12) factor -> FUNNAME LPAREN expression . COMMA expression RPAREN
    (13) factor -> FUNNAME LPAREN expression . COMMA expression COMMA expression RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 22
    COMMA           shift and go to state 23
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 21

    (11) factor -> FUNNAME LPAREN RPAREN .

    TIMES           reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    POW             reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    PLUS            reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    MINUS           reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    $end            reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    RPAREN          reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)
    COMMA           reduce using rule 11 (factor -> FUNNAME LPAREN RPAREN .)


state 22

    (10) factor -> FUNNAME LPAREN expression RPAREN .

    TIMES           reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    POW             reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    PLUS            reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    $end            reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 10 (factor -> FUNNAME LPAREN expression RPAREN .)


state 23

    (12) factor -> FUNNAME LPAREN expression COMMA . expression RPAREN
    (13) factor -> FUNNAME LPAREN expression COMMA . expression COMMA expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    expression                     shift and go to state 24
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 24

    (12) factor -> FUNNAME LPAREN expression COMMA expression . RPAREN
    (13) factor -> FUNNAME LPAREN expression COMMA expression . COMMA expression RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 26
    COMMA           shift and go to state 25
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 25

    (13) factor -> FUNNAME LPAREN expression COMMA expression COMMA . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . term POW factor
    (7) term -> . factor
    (8) factor -> . NUMBER
    (9) factor -> . LPAREN expression RPAREN
    (10) factor -> . FUNNAME LPAREN expression RPAREN
    (11) factor -> . FUNNAME LPAREN RPAREN
    (12) factor -> . FUNNAME LPAREN expression COMMA expression RPAREN
    (13) factor -> . FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN

    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    FUNNAME         shift and go to state 6

    expression                     shift and go to state 27
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 26

    (12) factor -> FUNNAME LPAREN expression COMMA expression RPAREN .

    TIMES           reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    POW             reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    $end            reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 12 (factor -> FUNNAME LPAREN expression COMMA expression RPAREN .)


state 27

    (13) factor -> FUNNAME LPAREN expression COMMA expression COMMA expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 28

    (13) factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .

    TIMES           reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    POW             reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    PLUS            reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    MINUS           reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    $end            reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMMA           reduce using rule 13 (factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN .)

