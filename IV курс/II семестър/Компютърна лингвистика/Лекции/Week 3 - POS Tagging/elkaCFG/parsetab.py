
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DIVIDE EQ FUNNAME LPAREN MINUS NUMBER PLUS POW RPAREN TIMES VARNAMEexpression : expression PLUS termexpression : VARNAME EQ expressionexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term POW factorterm : factorfactor : NUMBERfactor : VARNAMEfactor : LPAREN expression RPARENfactor : FUNNAME LPAREN expression RPARENfactor : FUNNAME LPAREN RPARENfactor : FUNNAME LPAREN expression COMMA expression RPARENfactor : FUNNAME LPAREN expression COMMA expression COMMA expression RPARENfactor : FUNNAME LPAREN expression COMMA expression COMMA expression COMMA expression RPAREN'
    
_lr_action_items = {'VARNAME':([0,6,8,9,10,11,12,13,15,27,29,32,],[3,3,17,17,17,17,17,3,3,3,3,3,]),'NUMBER':([0,6,8,9,10,11,12,13,15,27,29,32,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'LPAREN':([0,6,7,8,9,10,11,12,13,15,27,29,32,],[6,6,15,6,6,6,6,6,6,6,6,6,6,]),'FUNNAME':([0,6,8,9,10,11,12,13,15,27,29,32,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,3,4,5,16,17,18,19,20,21,22,23,25,26,30,33,35,],[0,-4,-10,-8,-9,-1,-10,-3,-5,-6,-7,-2,-11,-13,-12,-14,-15,-16,]),'PLUS':([1,2,3,4,5,14,16,17,18,19,20,21,22,23,24,25,26,28,30,31,33,34,35,],[8,-4,-10,-8,-9,8,-1,-10,-3,-5,-6,-7,8,-11,8,-13,-12,8,-14,8,-15,8,-16,]),'MINUS':([1,2,3,4,5,14,16,17,18,19,20,21,22,23,24,25,26,28,30,31,33,34,35,],[9,-4,-10,-8,-9,9,-1,-10,-3,-5,-6,-7,9,-11,9,-13,-12,9,-14,9,-15,9,-16,]),'RPAREN':([2,3,4,5,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,33,34,35,],[-4,-10,-8,-9,23,25,-1,-10,-3,-5,-6,-7,-2,-11,26,-13,-12,30,-14,33,-15,35,-16,]),'COMMA':([2,3,4,5,16,17,18,19,20,21,22,23,24,25,26,28,30,31,33,35,],[-4,-10,-8,-9,-1,-10,-3,-5,-6,-7,-2,-11,27,-13,-12,29,-14,32,-15,-16,]),'TIMES':([2,3,4,5,16,17,18,19,20,21,23,25,26,30,33,35,],[10,-10,-8,-9,10,-10,10,-5,-6,-7,-11,-13,-12,-14,-15,-16,]),'DIVIDE':([2,3,4,5,16,17,18,19,20,21,23,25,26,30,33,35,],[11,-10,-8,-9,11,-10,11,-5,-6,-7,-11,-13,-12,-14,-15,-16,]),'POW':([2,3,4,5,16,17,18,19,20,21,23,25,26,30,33,35,],[12,-10,-8,-9,12,-10,12,-5,-6,-7,-11,-13,-12,-14,-15,-16,]),'EQ':([3,],[13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,13,15,27,29,32,],[1,14,22,24,28,31,34,]),'term':([0,6,8,9,13,15,27,29,32,],[2,2,16,18,2,2,2,2,2,]),'factor':([0,6,8,9,10,11,12,13,15,27,29,32,],[4,4,4,4,19,20,21,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',10),
  ('expression -> VARNAME EQ expression','expression',3,'p_expression_varname','yacc.py',15),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',21),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',26),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',31),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',36),
  ('term -> term POW factor','term',3,'p_term_pow','yacc.py',45),
  ('term -> factor','term',1,'p_term_factor','yacc.py',50),
  ('factor -> NUMBER','factor',1,'p_factor_num','yacc.py',55),
  ('factor -> VARNAME','factor',1,'p_factor_varname','yacc.py',60),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','yacc.py',65),
  ('factor -> FUNNAME LPAREN expression RPAREN','factor',4,'p_factor_func','yacc.py',70),
  ('factor -> FUNNAME LPAREN RPAREN','factor',3,'p_factor_func_no_param','yacc.py',75),
  ('factor -> FUNNAME LPAREN expression COMMA expression RPAREN','factor',6,'p_factor_function_binary','yacc.py',80),
  ('factor -> FUNNAME LPAREN expression COMMA expression COMMA expression RPAREN','factor',8,'p_factor_function_teriary','yacc.py',85),
  ('factor -> FUNNAME LPAREN expression COMMA expression COMMA expression COMMA expression RPAREN','factor',10,'p_factor_function_quattro','yacc.py',90),
]
